name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            os-name: linux
            arch: amd64
            bin-ext: ""
          - os: macos-latest
            os-name: macos
            arch: amd64
            bin-ext: ""
          - os: windows-latest
            os-name: windows
            arch: amd64
            bin-ext: .exe

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install -y \
           libc6-dev \
           libgl1-mesa-dev \
           libxcursor-dev \
           libxi-dev \
           libxinerama-dev \
           libxrandr-dev \
           libxxf86vm-dev \
           libasound2-dev \
           pkg-config

      - name: Build
        run: |
          echo "Building for ${{ runner.os }}/amd64"
          go build -ldflags="-s -w" -o snakes${{ matrix.bin-ext }} ./cmd/snakes

      - name: Package
        shell: bash
        run: |
          BIN=snakes${{ matrix.bin-ext }}
          REL=snakes-${GITHUB_REF/refs\/tags\//}-${{ matrix.os-name }}-${{ matrix.arch }}
          tar czvf $REL.tar.gz $BIN
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            certutil -hashfile $REL.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $REL.sha256
          else
            shasum -a 256 $REL.tar.gz > $REL.sha256
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            snakes-*-${{ matrix.os-name }}-*.tar.gz
            snakes-*-${{ matrix.os-name }}-*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
